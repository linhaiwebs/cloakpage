events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    autoindex off; # 新增：禁止目录列表
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # 基本设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # 上游 PHP-FPM 服务器
    upstream backend_fpm {
        server backend:9000;
    }
    
    upstream frontend_fpm {
        server frontend:9000;
    }
    

    # 主服务器配置 - 端口 80
    server {
        listen 80;
        server_name luixs.xyz www.luixs.xyz;
        root /var/www/html/frontend;
        index index.php index.html;
        
        # 安全头部
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        
        
                # 处理管理后台请求
        location /admin {
            fastcgi_pass backend_fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /var/www/html/backend/public/index.php;
            include fastcgi_params;
            fastcgi_param REQUEST_URI $request_uri;
            fastcgi_param QUERY_STRING $query_string;
        }

        # 处理后端 API 请求
        location /app/maike/api/ {
            fastcgi_pass backend:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /var/www/html/backend/public/index.php;
            include fastcgi_params;
            fastcgi_param REQUEST_URI $request_uri;
            fastcgi_param QUERY_STRING $query_string;
            
            # CORS 头部
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            
            # 处理 OPTIONS 请求
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # 处理跳转页面
        location /jpint {
            fastcgi_pass backend:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /var/www/html/backend/public/index.php;
            include fastcgi_params;
            fastcgi_param REQUEST_URI $request_uri;
        }

        # 后端健康检查
        location /health {
            fastcgi_pass backend:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /var/www/html/backend/public/index.php;
            include fastcgi_params;
            fastcgi_param REQUEST_URI $request_uri;
        }

        # 静态文件 (CSS, JS, 图片) 并进行 Referer 检查
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            valid_referers blocked server_names; # 限制 Referer
            if ($invalid_referer) {
                return 404; # 如果 Referer 无效，返回 404 Not Found
            }
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # 前端 PHP 文件处理
        location ~ \.php$ {
            fastcgi_pass frontend_fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_param REQUEST_URI $request_uri;
            fastcgi_param QUERY_STRING $query_string;
             # 添加这些头以防止 Nginx 和浏览器缓存
            add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "Sat, 26 Jul 1997 05:00:00 GMT";
        }

        # 前端路由处理
        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        # 错误页面配置
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            return 200 "服务暂时不可用，请稍后再试";
            add_header Content-Type "text/html; charset=utf-8";
        }
    }

    # 备用服务器配置 - 端口 8000
    server {
        listen 8000;
        server_name luixs.xyz www.luixs.xyz;
        root /var/www/html/frontend;
        index index.php index.html;
        
        # 安全头部
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # 处理后端 API 请求
        location /app/maike/api/ {
            root /var/www/html/backend/public;
            try_files $uri /index.php$is_args$args;
            
            location ~ \.php$ {
                fastcgi_pass backend_fpm;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME /var/www/html/backend/public/index.php;
                include fastcgi_params;
                fastcgi_param REQUEST_URI $request_uri;
                fastcgi_param QUERY_STRING $query_string;
                
                # CORS 头部
                add_header Access-Control-Allow-Origin "*" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
                
                # 处理 OPTIONS 请求
                if ($request_method = 'OPTIONS') {
                    return 204;
                }
            }
        }

        # 处理跳转页面
        location /jpint {
            root /var/www/html/backend/public;
            try_files $uri /index.php$is_args$args;
            
            location ~ \.php$ {
                fastcgi_pass backend_fpm;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME /var/www/html/backend/public/index.php;
                include fastcgi_params;
                fastcgi_param REQUEST_URI $request_uri;
            }
        }

        # 后端健康检查
        location /health {
            root /var/www/html/backend/public;
            try_files $uri /index.php$is_args$args;
            
            location ~ \.php$ {
                fastcgi_pass backend_fpm;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME /var/www/html/backend/public/index.php;
                include fastcgi_params;
                fastcgi_param REQUEST_URI $request_uri;
            }
        }

        # 静态文件 (CSS, JS, 图片) 并进行 Referer 检查
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            valid_referers blocked server_names; # 限制 Referer
            if ($invalid_referer) {
                return 404; # 如果 Referer 无效，返回 404 Not Found
            }
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # 前端 PHP 文件处理
        location ~ \.php$ {
            fastcgi_pass frontend_fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_param REQUEST_URI $request_uri;
            fastcgi_param QUERY_STRING $query_string;
        }

        # 前端路由处理
        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        # 健康检查端点
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
